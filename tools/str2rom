#!/bin/bash
#
# Copyright (C) 2023 Manuel Perez 
# mail: <manuel2perez@proton.me> 
# https://github.com/amanuellperez/mcu 
# 
# This file is part of the MCU++ Library. 
# 
# MCU++ Library is a free library: you can redistribute it and/or modify 
# it under the terms of the GNU General Public License as published by 
# the Free Software Foundation, either version 3 of the License, or 
# (at your option) any later version. 
# 
# This library is distributed in the hope that it will be useful, 
# but WITHOUT ANY WARRANTY; without even the implied warranty of 
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
# GNU General Public License for more details. 
# 
# You should have received a copy of the GNU General Public License 
# along with this program. If not, see <https://www.gnu.org/licenses/>. 
#
#****************************************************************************
#
#  DESCRIPCION
#	Las strings conviene meterlas en PROGMEM. Para ello uso la clase
#	ROM_string. 
#	El problema con esa clase es que hay que pasarle el número de
#	caracteres que tiene la cadena, lo cual es propenso a error.
#
#	Este script resuelve ese problema: calcula automáticamente la longitud
#	de la cadena.
#
#	El fichero de entrada será de la forma:
#
#	msg_cadena1 "cadena1"
#	msg_cadena2 "Menu\n"
#	            "1. opcion 1\n"
#	            "2. opcion 2\n"
#
#	Observar que se puede poner la cadena en diferentes líneas, para que
#	sea más fácil de leer.
#
#	El fichero que genera tiene el mismo nombre que el fichero de entrada.
#
#  HISTORIA
#    Manuel Perez
#    03/03/2023 Escrito
#
#****************************************************************************/

PATH=/bin:/usr/bin
script_name=`basename $0`

# tmp vbles
# ---------
awk_file=/tmp/str2progmem$$
tmp1=/tmp/str2progmem1$$
tmp2=/tmp/str2progmem2$$

# args
# ----
case $# in
    0) echo "Usage: $0 input_file" 1>&2; exit 2
esac

input_file=$1
output_file=$(echo $1 | cut -d'.' -f1).h
define_file=$(echo $output_file | cut -d'.' -f1|tr [a-z] [A-Z])
myu_namespace="myu"
end="xXyY;.;"


# clean up files
trap 'rm -f $awk_file $tmp1 $tmp2; exit 1' 1 2 15

# awk program
cat > $awk_file << EOF
BEGIN {
    FS = "\"" 
}

{ 
    printf "constexpr ${myu_namespace}::ROM_string<%d> ", \$3
    printf "%s\n\tPROGMEM{\"%s\"};\n\n", \$1, \$2
}
EOF

header="
// Copyright (C) `date +%G` Manuel Perez 
\n//           mail: <manuel2perez@proton.me>
\n//           https://github.com/amanuellperez/mcu
\n//
\n// This file is part of the MCU++ Library.
\n//
\n// MCU++ Library is a free library: you can redistribute it and/or modify
\n// it under the terms of the GNU General Public License as published by
\n// the Free Software Foundation, either version 3 of the License, or
\n// (at your option) any later version.
\n//
\n// This library is distributed in the hope that it will be useful,
\n// but WITHOUT ANY WARRANTY; without even the implied warranty of
\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
\n// GNU General Public License for more details.
\n//
\n// You should have received a copy of the GNU General Public License
\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.
\n\n// This file was automatically generated by $script_name
\n
\n#pragma once
\n
\n#ifndef __${define_file}_H__
\n#define __${define_file}_H__
\n\n"

tail="\n
\n#endif\n"

# main
# ----

# 1. Quitamos comentarios, lineas en blanco y unimos las strings que estén
#    separadas en varias filas todas en una misma.
#    Observar el truco usado: el añado el pattern $end a cada fila, luego las
#    uno todas en una misma y fusiono las cadenas que serán de la forma "$end"
sed -e '/^[ \t]*$/d' -e '/^[ \t]*#/d' \
    -e 's/^[ \t]*"/"/g' -e 's/[ \t]*$//g' \
    -e "s/$/$end/g" $input_file |\
    tr '\n' ' '  |\
    sed -e "s/\"$end \"//g" -e "s/$end /\n/g" > $tmp1

# 2. Calculamos la length de la string
cut -d'"' -f2 $tmp1 |sed 's/\\n/n/g'|awk '{print length($0)}' > $tmp2

# 3. Generamos el fichero
echo -e $header	 > $output_file
paste $tmp1 $tmp2 |awk -f $awk_file >> $output_file
echo -e $tail    >> $output_file


# destructor
# ----------
rm -f $awk_file $tmp1 $tmp2


