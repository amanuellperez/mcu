
%{

#include "main.h"
#include "lex.h"

#define YYMAXDEPTH 20
#define YYINITDEPTH 100
%}

%define api.value.type {double}; /* stack type, by default is int */

// Para las operaciones usar caracteres que nos sean alfanuméricos, para no
// interferir con la lógica de la tabla de símbolos.
%token NUMBER
%left '+' '-'	/* left associaive, same precedence */
%left '*' '/'	/* left associaive, higher precedence */
%right '^' 's'  /* exponentiation and roots */
%left UNARYMINUS  /* -number */

%%

line: /* nothing */
      | '='	      {Main::result = 0;}
      | line expr '\n' {Main::result = $2;}
      ;

expr:   NUMBER		{ $$ = $1; }
      | expr '+' expr   { $$ = $1 + $3;}
      | expr '-' expr	{ $$ = $1 - $3;}
      | expr '*' expr	{ $$ = $1 * $3;}
      | expr '/' expr	{ $$ = $1 / $3;}
      | '(' expr ')'	{ $$ = $2; }
      | 's' expr	{ $$ = sqrt($2); }
      | expr '^' expr   { $$ = pow($1, $3); }
      | '-' expr %prec UNARYMINUS {$$ = -$2;}
      ;

%%


