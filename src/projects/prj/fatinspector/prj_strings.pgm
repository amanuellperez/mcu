# strings necesarias para el programa
# Para generar el fichero .h: 
#	$ str2progmem strings.pgm
#

# main
msg_hello   "\n\n----------------------------------------\n"
	    "SDCard inspector\n"
	    "----------------------------------------\n\n"

msg_main_no_sector_load "No sector in memory"
msg_main_sector_load "Sector in memory. Address: "

msg_main_menu	"Read:\n"
                "\t1. Status register\n"
		"\t2. Sector\n"
		"\t3. MBR boot sector\n"
		"\t4. FAT32 boot sector\n"
		"\t5. FS info sector\n"
		"\t6. FAT area\n"
		"\t7. Root directory\n"
		"\t8. Directories (ls and cd) \n"
		"\t9. File sectors\n"


# load sector
msg_sector_address	"Sector address: "

# print_sector_fromto
msg_print_sector_from "Print sector from byte number"
msg_print_sector_size "Number of bytes to print (0 to the end)"

msg_print_sector_from_to_big "\nError: first byte has to be less than "
msg_print_sector_size_to_big "\nError: size to big"

# edit_sector
msg_edit_sector_instructions_in_hex "Write all modifications in hexadecimal without "
			     "0x.\nPress return to end.\n"

msg_edit_sector_instructions_in_char "Write all modifications in chars.\n"
			    "Press return to end.\n"

msg_edit_sector_from "First byte to edit"
msg_edit_sector_from_error "Error reading"


# print_sector_as_MBR
msg_print_sector_as_MBR "Master Boot Record\n"
msg_is_MBR_valid_sig "MBR has a valid sig"
msg_partition1 "Partition 1\n"
msg_is_fat32 "is FAT32"
msg_lba_offset "LBA offset"
msg_is_bootable "is bootable"


# print_sector_as_FAT32_boot_sector
msg_print_sector_as_FAT_boot_sector "FAT32: boot sector\n"

# print_sector_as_FS_info
msg_print_sector_as_FS_info "FAT32: FS info\n"

