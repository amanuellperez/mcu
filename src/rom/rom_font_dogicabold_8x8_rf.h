// Copyright (C) 2024 Manuel Perez 
//           mail: <manuel2perez@proton.me>
//           https://github.com/amanuellperez/mcu
//
// This file is part of the MCU++ Library.
//
// MCU++ Library is a free library: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.


// This file has been generated automatically by `ttf_txt2bin.py`


#pragma once
#ifndef __ROM_FONT_DOGICABOLD_8X8_RF_H__
#define __ROM_FONT_DOGICABOLD_8X8_RF_H__

#include <atd_rom.h>
// #include <avr_memory.h> <-- hay que incluirlo antes de este archivo

namespace rom{
namespace font_dogicabold_8x8_rf{

using ROM_read = MCU::ROM_read;

struct Font{
// Traits requirements
static constexpr bool is_by_rows{};
static constexpr bool is_looking_from_the_front{};
static constexpr bool is_ASCII_font{};

// Número de caracteres
static constexpr uint8_t nchars = 94;

// Los códigos ASCII empiezan en 32
static constexpr uint8_t index(char c) {return c - 32;}

// Dimensions
static constexpr uint8_t rows = 8; // número de filas que tiene cada font
static constexpr uint8_t cols = 8; // número de columnas que tiene cada font

// Tamaño en bytes
static constexpr uint8_t bytes_in_a_row   = 1; // número de bytes que tiene cada fila
static constexpr uint8_t rows_in_bytes = 8;
static constexpr uint8_t cols_in_bytes = 1;
inline static constexpr uint8_t char_byte_size() {return rows * bytes_in_a_row;}

static constexpr
atd::ROM_biarray<uint8_t, nchars, rows*bytes_in_a_row, ROM_read> glyph
	PROGMEM = {
0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, //  
0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00000000, 0b00011000, 0b00000000, // !
0b00000000, 0b00110110, 0b00110110, 0b01101100, 0b00000000, 0b00000000, 0b00000000, 0b00000000, // "
0b00000000, 0b00110110, 0b01111111, 0b00110110, 0b00110110, 0b01111111, 0b00110110, 0b00000000, // #
0b00000000, 0b00111110, 0b01101011, 0b01101000, 0b00111110, 0b00001011, 0b01101011, 0b00111110, // $
0b01000110, 0b10101100, 0b11101100, 0b01011000, 0b00011010, 0b00110101, 0b00110111, 0b01100010, // %
0b00111000, 0b01101100, 0b01101100, 0b00111000, 0b01101111, 0b01100110, 0b00111111, 0b00000000, // &
0b00000000, 0b00001100, 0b00001100, 0b00011000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, // '
0b00001100, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00001100, 0b00000000, // (
0b00011000, 0b00001100, 0b00001100, 0b00001100, 0b00001100, 0b00001100, 0b00011000, 0b00000000, // )
0b00000000, 0b00011000, 0b01111110, 0b00111100, 0b01111110, 0b00011000, 0b00000000, 0b00000000, // *
0b00000000, 0b00011000, 0b00011000, 0b01111110, 0b00011000, 0b00011000, 0b00000000, 0b00000000, // +
0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00001100, 0b00001100, 0b00011000, // ,
0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00111110, 0b00000000, 0b00000000, 0b00000000, // -
0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00011000, 0b00011000, 0b00000000, // .
0b00000110, 0b00000110, 0b00001100, 0b00001100, 0b00011000, 0b00011000, 0b00110000, 0b00110000, // /
0b00111100, 0b01100110, 0b01110110, 0b01111110, 0b01101110, 0b01100110, 0b00111100, 0b00000000, // 0
0b00011000, 0b01111000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b01111110, 0b00000000, // 1
0b00111100, 0b01100110, 0b00000110, 0b00001100, 0b00011000, 0b00110000, 0b01111110, 0b00000000, // 2
0b01111100, 0b00000110, 0b00000110, 0b00111100, 0b00000110, 0b00000110, 0b01111100, 0b00000000, // 3
0b00001100, 0b00011100, 0b00111100, 0b01101100, 0b01111110, 0b00001100, 0b00001100, 0b00000000, // 4
0b01111110, 0b01100000, 0b01111100, 0b00000110, 0b00000110, 0b01100110, 0b00111100, 0b00000000, // 5
0b00111100, 0b01100110, 0b01100000, 0b01111100, 0b01100110, 0b01100110, 0b00111100, 0b00000000, // 6
0b01111110, 0b01100110, 0b00000110, 0b00001100, 0b00011000, 0b00110000, 0b00110000, 0b00000000, // 7
0b00111100, 0b01100110, 0b01100110, 0b00111100, 0b01100110, 0b01100110, 0b00111100, 0b00000000, // 8
0b00111100, 0b01100110, 0b01100110, 0b00111110, 0b00000110, 0b00001100, 0b00111000, 0b00000000, // 9
0b00000000, 0b00000000, 0b00011000, 0b00000000, 0b00000000, 0b00011000, 0b00000000, 0b00000000, // :
0b00000000, 0b00000000, 0b00000000, 0b00001100, 0b00000000, 0b00001100, 0b00001100, 0b00011000, // ;
0b00000000, 0b00001100, 0b00011000, 0b00110000, 0b00011000, 0b00001100, 0b00000000, 0b00000000, // <
0b00000000, 0b00000000, 0b01111111, 0b00000000, 0b01111111, 0b00000000, 0b00000000, 0b00000000, // =
0b00000000, 0b00110000, 0b00011000, 0b00001100, 0b00011000, 0b00110000, 0b00000000, 0b00000000, // >
0b00111100, 0b01100110, 0b00000110, 0b00011100, 0b00110000, 0b00000000, 0b00011000, 0b00000000, // ?
0b01111100, 0b11000110, 0b11111110, 0b11011110, 0b11111100, 0b11000011, 0b01111110, 0b00000000, // @
0b00111100, 0b01100110, 0b01100110, 0b01100110, 0b01111110, 0b01100110, 0b01100110, 0b00000000, // A
0b01111100, 0b01100110, 0b01100110, 0b01111100, 0b01100110, 0b01100110, 0b01111100, 0b00000000, // B
0b00111100, 0b01100110, 0b01100000, 0b01100000, 0b01100000, 0b01100110, 0b00111100, 0b00000000, // C
0b11111100, 0b01100110, 0b01100110, 0b01100110, 0b01100110, 0b01100110, 0b01111100, 0b00000000, // D
0b01111110, 0b01100000, 0b01100000, 0b01111100, 0b01100000, 0b01100000, 0b01111110, 0b00000000, // E
0b01111110, 0b01100000, 0b01100000, 0b01111100, 0b01100000, 0b01100000, 0b01100000, 0b00000000, // F
0b00111110, 0b01100000, 0b01100000, 0b01101110, 0b01100110, 0b01100110, 0b00111110, 0b00000000, // G
0b01100110, 0b01100110, 0b01100110, 0b01111110, 0b01100110, 0b01100110, 0b01100110, 0b00000000, // H
0b00111100, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00111100, 0b00000000, // I
0b00111110, 0b00001100, 0b00001100, 0b00001100, 0b00001100, 0b00001100, 0b00111000, 0b00000000, // J
0b01100110, 0b01101100, 0b01111000, 0b01111000, 0b01101100, 0b01101100, 0b01100110, 0b00000000, // K
0b00110000, 0b00110000, 0b00110000, 0b00110000, 0b00110000, 0b00110000, 0b00111110, 0b00000000, // L
0b01100011, 0b01100011, 0b01110111, 0b01111111, 0b01100011, 0b01100011, 0b01100011, 0b00000000, // M
0b01100110, 0b01110110, 0b01111110, 0b01101110, 0b01100110, 0b01100110, 0b01100110, 0b00000000, // N
0b00111100, 0b01100110, 0b01100110, 0b01100110, 0b01100110, 0b01100110, 0b00111100, 0b00000000, // O
0b01111100, 0b01100110, 0b01100110, 0b01111100, 0b01100000, 0b01100000, 0b01100000, 0b00000000, // P
0b00111100, 0b01100110, 0b01100110, 0b01100110, 0b01110110, 0b01101100, 0b00111110, 0b00000000, // Q
0b01111100, 0b01100110, 0b01100110, 0b01111100, 0b01101100, 0b01100110, 0b01100110, 0b00000000, // R
0b00111100, 0b01100110, 0b01100000, 0b00111100, 0b00000110, 0b01100110, 0b00111100, 0b00000000, // S
0b01111110, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00000000, // T
0b01100110, 0b01100110, 0b01100110, 0b01100110, 0b01100110, 0b01100110, 0b00111100, 0b00000000, // U
0b01100110, 0b01100110, 0b01100110, 0b01100110, 0b00111100, 0b00111100, 0b00011000, 0b00000000, // V
0b11000011, 0b11000011, 0b11011011, 0b11011011, 0b11011011, 0b11111111, 0b01100110, 0b00000000, // W
0b01100110, 0b01100110, 0b00111100, 0b00011000, 0b00111100, 0b01100110, 0b01100110, 0b00000000, // X
0b01100110, 0b01100110, 0b01100110, 0b00111100, 0b00011000, 0b00011000, 0b00011000, 0b00000000, // Y
0b01111110, 0b00000110, 0b00001100, 0b00011000, 0b00110000, 0b01100000, 0b01111110, 0b00000000, // Z
0b00011100, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00011100, 0b00000000, // [
0b00110000, 0b00110000, 0b00011000, 0b00011000, 0b00001100, 0b00001100, 0b00000110, 0b00000110, // 
0b00011100, 0b00001100, 0b00001100, 0b00001100, 0b00001100, 0b00001100, 0b00011100, 0b00000000, // ]
0b00000000, 0b00111100, 0b01111110, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, // ^
0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b01111111, // _
0b00000000, 0b00011000, 0b00001100, 0b00001100, 0b00000000, 0b00000000, 0b00000000, 0b00000000, // `
0b00000000, 0b00111100, 0b00000110, 0b00111110, 0b01100110, 0b01100110, 0b00111110, 0b00000000, // a
0b01100000, 0b01100000, 0b01111100, 0b01100110, 0b01100110, 0b01100110, 0b01111100, 0b00000000, // b
0b00000000, 0b00111100, 0b01100110, 0b01100000, 0b01100000, 0b01100000, 0b00111110, 0b00000000, // c
0b00000110, 0b00000110, 0b00111110, 0b01100110, 0b01100110, 0b01100110, 0b00111110, 0b00000000, // d
0b00000000, 0b00111100, 0b01100110, 0b01111110, 0b01100000, 0b01100000, 0b00111110, 0b00000000, // e
0b00011110, 0b00110000, 0b00110000, 0b01111100, 0b00110000, 0b00110000, 0b00110000, 0b00000000, // f
0b00000000, 0b00111110, 0b01100110, 0b01100110, 0b01100110, 0b00111110, 0b00000110, 0b00111100, // g
0b01100000, 0b01100000, 0b01111100, 0b01110110, 0b01100110, 0b01100110, 0b01100110, 0b00000000, // h
0b00011000, 0b00000000, 0b00111000, 0b00011000, 0b00011000, 0b00011000, 0b00111100, 0b00000000, // i
0b00000000, 0b00111100, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00110000, // j
0b00000000, 0b01100110, 0b01101100, 0b01111000, 0b01111000, 0b01101100, 0b01100110, 0b00000000, // k
0b00000000, 0b00110000, 0b00110000, 0b00110000, 0b00110000, 0b00110000, 0b00011100, 0b00000000, // l
0b00000000, 0b01111110, 0b11011011, 0b11011011, 0b11011011, 0b11011011, 0b11011011, 0b00000000, // m
0b00000000, 0b00011100, 0b01110110, 0b01100110, 0b01100110, 0b01100110, 0b01100110, 0b00000000, // n
0b00000000, 0b00111100, 0b01100110, 0b01100110, 0b01100110, 0b01100110, 0b00111100, 0b00000000, // o
0b00000000, 0b01111100, 0b01100110, 0b01100110, 0b01100110, 0b01111100, 0b01100000, 0b01100000, // p
0b00000000, 0b00111110, 0b01100110, 0b01100110, 0b01100110, 0b00111110, 0b00000110, 0b00000110, // q
0b00000000, 0b00011110, 0b00111000, 0b00110000, 0b00110000, 0b00110000, 0b00110000, 0b00000000, // r
0b00000000, 0b00111100, 0b01100000, 0b00111100, 0b00000110, 0b01100110, 0b00111100, 0b00000000, // s
0b00110000, 0b00110000, 0b00111110, 0b00110000, 0b00110000, 0b00110000, 0b00011110, 0b00000000, // t
0b00000000, 0b01100110, 0b01100110, 0b01100110, 0b01100110, 0b01101110, 0b00111110, 0b00000000, // u
0b00000000, 0b01100110, 0b01100110, 0b01100110, 0b00111100, 0b00111100, 0b00011000, 0b00000000, // v
0b00000000, 0b00000011, 0b11011011, 0b11011011, 0b11011011, 0b11011011, 0b01111110, 0b00000000, // w
0b00000000, 0b01100110, 0b00111100, 0b00011000, 0b00011000, 0b00111100, 0b01100110, 0b00000000, // x
0b00000000, 0b00110110, 0b00110110, 0b00110110, 0b00011100, 0b00001100, 0b00111000, 0b00000000, // y
0b00000000, 0b00111110, 0b00000110, 0b00001100, 0b00011000, 0b00110000, 0b00111110, 0b00000000, // z
0b00001100, 0b00011010, 0b00010000, 0b00110000, 0b00110000, 0b00010000, 0b00011010, 0b00001100, // {
0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, // |
0b00011000, 0b00101100, 0b00000100, 0b00000110, 0b00000110, 0b00000100, 0b00101100, 0b00011000// }
}; // glyphs
}; // struct Font


} // namespace font
} // namespace rom

#endif
